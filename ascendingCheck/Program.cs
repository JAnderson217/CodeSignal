/*You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:

b[0] is equal to a[0];
b[1] is equal to the last element of a;
b[2] is equal to a[1];
b[3] is equal to the second-last element of a;
b[4] is equal to a[2];
b[5] is equal to the third-last element of a;
and so on.
Your task is to determine whether the new array b is sorted in strictly ascending order or not.

If array a is [1,2,3,4,5,6], array b is [1,6,2,5,3,4]
strictly ascending so if two values are equal should return false*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ascendingCheck
{
    internal class Program
    {
        static void Main(string[] args)
        {
            solution(new int[] { -92, -23, 0, 45, 89, 96, 99, 95, 89, 41, -17, -48 });
            //-92 -48 -23 -17 0 41 45 89 89 95 96 99
            Console.ReadLine();
        }

        public static bool solution(int[] a)
        {
            //create new array
            int[] b = new int[a.Length];
            int count = 0;
            for (int i = 0; i < a.Length; i++)
            {
                if (i%2 == 0)
                {
                    b[i] = a[count];
                    count++;
                }
                else
                {
                    b[i] = a[a.Length - count];
                }
            }
            foreach (int i in b)
            {
                Console.Write($"{i},");
            }
            Console.WriteLine(isAscending(b));
            return isAscending(b);
        }

        public static bool isAscending(int [] a)
        {
            int count = 0;
            for (int i = 0; i < a.Length-1; i++)
            {
                if (a[i + 1] > a[i]) count++;
            }
            return (count==a.Length-1);
        }
    }
}
